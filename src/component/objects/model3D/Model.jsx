import test from './cardv0_2.gltf'
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import {useFrame } from '@react-three/fiber'

import React, { Suspense, useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";

export const Model = (props) => {
  const group = useRef();
  const [active, setActive] = useState(false)
  const { nodes, materials } = useGLTF(test);
  useFrame((state, delta) => {
    // mesh.current.rotation.x += 0.01,
        if(active) {
            group.current.rotation.z += .01
            group.current.rotation.x -= .01
            group.current.rotation.y += .01
            
            
        }else{
            group.current.rotation.y -= .01

        }
    })
    
  return (
    <Suspense fallback={null}>
        <group ref={group} {...props} rotateX={90} dispose={null}>
            <group rotation={[-Math.PI / 2, 0, Math.PI]}>

            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Cube.geometry}
                material={materials["Material.005"]}
                />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Cube_1.geometry}
                material={materials["Material.006"]}
                />
            </group>
        </group>
    </Suspense>
  );
}

useGLTF.preload(test);
